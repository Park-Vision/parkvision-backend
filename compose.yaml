version: '3'
services:
  postgresql:
    image: 'postgres'
    container_name: postgresql
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=compose-postgres
      - POSTGRES_PASSWORD=compose-postgres
  zookeeper:
    image: wurstmeister/zookeeper
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
#    ports:
#      - "2181:2181"
  kafka:
    image: wurstmeister/kafka
    ports:
      - "29092:29092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
      KAFKA_ADVERTISED_LISTENERS: 'SSL://kafka:29092,PLAINTEXT://localhost:9092'
      KAFKA_LISTENERS: 'SSL://:29092,PLAINTEXT://:9092'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_SSL_ENABLED_PROTOCOLS: 'TLSv1.2,TLSv1.3,TLSv1.1'
      KAFKA_SSL_PROTOCOL: 'TLSv1.1'
      KAFKA_SSL_KEYSTORE_LOCATION: '/certs/kafka.server.keystore.jks'
      KAFKA_SSL_KEYSTORE_PASSWORD: 'maciek'
      KAFKA_SSL_CLIENT_AUTH: 'required'
      KAFKA_SSL_KEY_PASSWORD: 'maciek'
      KAFKA_SSL_TRUSTSTORE_LOCATION: '/certs/kafka.server.truststore.jks'
      KAFKA_SSL_TRUSTSTORE_PASSWORD: 'maciek'
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: ''
      #KAFKA_SECURITY_INTER_BROKER_PROTOCOL: 'SSL'
    volumes:
      - ./ssl2:/certs
    depends_on:
      - zookeeper
  springboot:
    container_name: springboot
    image: spring
    ports:
      - "8080:8080"
    depends_on:
      - postgresql
      - zookeeper
      - kafka

  react:
    restart: always
    container_name: react
    image: react
    ports:
      - "3000:3000"
    stdin_open: true
    depends_on:
      - springboot
